diff --git a/node_modules/@stardust-collective/dag4-keystore/cjs/key-store.d.ts b/node_modules/@stardust-collective/dag4-keystore/cjs/key-store.d.ts
index ec36be2..9be28cd 100644
--- a/node_modules/@stardust-collective/dag4-keystore/cjs/key-store.d.ts
+++ b/node_modules/@stardust-collective/dag4-keystore/cjs/key-store.d.ts
@@ -24,6 +24,7 @@ export declare class KeyStore {
     getMasterKeyFromMnemonic(mnemonic: string, derivationPath?: DERIVATION_PATH): HDKey;
     deriveAccountFromMaster(masterKey: hdkey, index: number): string;
     sign(privateKey: string, msg: string): string;
+    personalSign(privateKey: string, msg: string): string;
     verify(publicKey: string, msg: string, signature: EC.SignatureInput): any;
     validateDagAddress(address: string): boolean;
     getPublicKeyFromPrivate(privateKey: string, compact?: boolean): string;
diff --git a/node_modules/@stardust-collective/dag4-keystore/esm/key-store.d.ts b/node_modules/@stardust-collective/dag4-keystore/esm/key-store.d.ts
index ec36be2..9be28cd 100644
--- a/node_modules/@stardust-collective/dag4-keystore/esm/key-store.d.ts
+++ b/node_modules/@stardust-collective/dag4-keystore/esm/key-store.d.ts
@@ -24,6 +24,7 @@ export declare class KeyStore {
     getMasterKeyFromMnemonic(mnemonic: string, derivationPath?: DERIVATION_PATH): HDKey;
     deriveAccountFromMaster(masterKey: hdkey, index: number): string;
     sign(privateKey: string, msg: string): string;
+    personalSign(privateKey: string, msg: string): string;
     verify(publicKey: string, msg: string, signature: EC.SignatureInput): any;
     validateDagAddress(address: string): boolean;
     getPublicKeyFromPrivate(privateKey: string, compact?: boolean): string;
diff --git a/node_modules/@stardust-collective/dag4-keystore/esm/key-store.js b/node_modules/@stardust-collective/dag4-keystore/esm/key-store.js
index 0888c80..234e181 100644
--- a/node_modules/@stardust-collective/dag4-keystore/esm/key-store.js
+++ b/node_modules/@stardust-collective/dag4-keystore/esm/key-store.js
@@ -117,6 +117,10 @@ export class KeyStore {
         const ecSigHex = Buffer.from(ecSig.toDER()).toString('hex');
         return ecSigHex;
     }
+    personalSign(privateKey, msg) {
+        const prefixedMessage = `\u0019Constellation Signed Message:\n${msg.length.toString()}\n${msg}`;
+        return this.sign(privateKey, prefixedMessage);
+    }
     verify(publicKey, msg, signature) {
         const sha512Hash = this.sha512(msg);
         const validSig = curve.verify(sha512Hash, signature, Buffer.from(publicKey, 'hex'));
